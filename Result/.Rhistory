install.packages(xlsReadWrite)
require(xlsReadWrite)
install.packages("readxl")
library(readxl)
df <- read_excel("C:/Users/Felix/Dropbox/MyDocument/Data Nitrogen - Lexi Pendong")
df <- read_excel("C:/Users/Felix/Dropbox/MyDocument/Data Nitrogen - Lexi Pendong.xlsx")
df
library(readxl)
df <- read_excel("C:/Users/Felix/Dropbox/MyDocument/Data Nitrogen - Lexi Pendong.xlsx")
plot(df)
install.packages("pls")
?pls
help(pls)
??pls
library(readxl)
library(pls)
df <- read_excel("C:/Users/Felix/Dropbox/MyDocument/Data Nitrogen - Lexi Pendong.xlsx")
summary(df)
head(df)
library(readxl)
library(pls)
df <- read_excel("C:/Users/Felix/Dropbox/MyDocument/Data Nitrogen - Lexi Pendong.xlsx")
summary(df)
install.packages("plspm")
plot(df)
library(readxl)
dframe <- read_excel('C:/Users/Felix/Dropbox/FORESTS2020/00AllData/Data_1048_Yoga.xlsx')
print(dframe)
install.packages(xlsx)
install.packages("xlsx")
install.packages("xlsx")
library(xlsx)
library('xlsx')
library("xlsx")
library(dplyr)
install.packages(dplyr)
install.packages("dplyr")
install.packages(openxl)
install.packages(openxlsx)
install.packages("openxlsx")
install.packages("dplyr")
install.packages("readxl")
library(readxl)
library(openxlsx)
library(dplyr)
#----- Load new dataframe
setwd('C:/Users/Felix/Dropbox/FORESTS2020/00AllData/') # Path for load Data
dframe <- read_xlsx('Data_1048_Yoga')
dframe <- read_xlsx('Data_1048_Yoga.xlsx')
print(dframe)
boxplot(dframe$Band_4)
summary(dframe)
boxplot(dframe$Band_4, dframe$frci)
boxplot(dframe$Band_4)
remove_outliers <- function(x, na.rm = TRUE, ...){
qnt <- quantile(x, probs = c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
y
}
plot(dframe$Band_4, dframe$frci)
rm_outlyr <- remove_outliers(dframe$Band_4)
addDF <- (dframe["Band_4N"] = rm_outlyr)
print(dframe)
plot(dframe$Band_4N, dframe$frci)
boxplot(dframe$Band_4N)
boxplot(dframe$Band_4)
rm_outlyr <- remove_outliers(dframe$Band_4N)
addDF <- (dframe["Band_4NN"] = rm_outlyr)
print(dframe)
boxplot(dframe$Band_4)
boxplot(dframe$Band_4NN)
plot(dframe$Band_4NN, dframe$frci)
boxplot(dframe$Band_4NN)
rm_outlyr <- remove_outliers(dframe$Band_4NN)
addDF <- (dframe["Band_43"] = rm_outlyr)
print(dframe)
boxplot(dframe$Band_43)
plot(dframe$Band_43, dframe$frci)
dropCol <- c("FID", "Shape", "Class", "kategori", "Band_1", "Band_9", "Band_4N", "Band_4NN")
dropDF <- dframe[ , !(names(dframe) %in% dropCol)]
NewDF <- dropDF[ !(dropDF$Band_43 %in% c(NA)), ]
print(NewDF)
boxplot(NewDF$Band_4)
library(readxl)
library(openxlsx)
library(dplyr)
remove_outliers <- function(x, na.rm = TRUE, ...){
qnt <- quantile(x, probs = c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
y
}
#----- Load new dataframe
setwd('C:/Users/Felix/Dropbox/FORESTS2020/00AllData/') # Path for load Data
dframe <- read_xlsx('Data_1048_Yoga.xlsx')
print(dframe)
rm_outlyr <- remove_outliers(dframe$Band_4) # remove outliers in dataframe
addDF <- (dframe["Band_4N"] = rm_outlyr)
print(dframe)
rm_outlyr <- remove_outliers(dframe$Band_4N) # remove outliers in dataframe
addDF <- (dframe["Band_4NN"] = rm_outlyr)
print(dframe)
rm_outlyr <- remove_outliers(dframe$Band_4NN) # remove outliers in dataframe
addDF <- (dframe["Band_43"] = rm_outlyr)
print(dframe)
boxplot(dframe$Band_43)
dropCol <- c("FID", "Shape", "kategori", "Band_1", "Band_9", "Band_4N", "Band_4NN") # Drop row and column on dataframe
dropDF <- dframe[ , !(names(dframe) %in% dropCol)]
NewDF <- dropDF[ !(dropDF$Band_43 %in% c(NA)), ]
print(NewDF)
boxplot(NewDF$Band_4)
value <- min(table(NewDF$Class))
dropCol <- c("Band_43")
dropDF <- NewDF[ , !(names(NewDF) %in% dropCol)]
newDF <- NewDF %>% group_by(Class) %>% sample_n(value)
print(newDF)
boxplot(newDF$Band_4)
plot(newDF$Band_4, newDF$frci)
setwd('D:/00RCode/Result') # Path for save result
New_DF_xlsx <- write.xlsx(newDF, file = "Cidanau_Try02.xlsx")
#----- Balancing data based Class
library(readxl)
library(openxlsx)
library(dplyr)
setwd('C:/Users/Felix/Dropbox/FORESTS2020/00AllData/')
dframe <- read_xlsx('Data_1048_Yoga.xlsx')
print(dframe)
#----- Balancing data based Class
library(readxl)
library(openxlsx)
library(dplyr)
setwd('C:/Users/Felix/Dropbox/FORESTS2020/00AllData/')
dframe <- read_xlsx('Data_1048_Yoga.xlsx')
print(dframe)
dropCol <- c("FID","Shape","kategori")
dropDF <- dframe[ , !(names(dframe) %in% dropCol)]
NewDF <- dropDF[ !(dropDF$Band_43 %in% c(NA)), ]
print(dframe)
print(dropDF)
value <- min(table(dropDF$Class)) # Balancing data
newDF <- NewDF %>% group_by(Class) %>% sample_n(value)
newDF <- dropDF %>% group_by(Class) %>% sample_n(value)
print(dropDF)
#----- Balancing data based Class
library(readxl)
library(openxlsx)
library(dplyr)
setwd('C:/Users/Felix/Dropbox/FORESTS2020/00AllData/')
dframe <- read_xlsx('Data_1048_Yoga.xlsx')
print(dframe)
dropCol <- c("FID","Shape","kategori")
dropDF <- dframe[ , !(names(dframe) %in% dropCol)]
value <- min(table(dropDF$Class)) # Balancing data
newDF <- dropDF %>% group_by(Class) %>% sample_n(value)
print(newDF)
order(newDF)
sort(newDF)
arrange(newDF)
#----- Balancing data based Class
library(readxl)
library(openxlsx)
library(dplyr)
setwd('C:/Users/Felix/Dropbox/FORESTS2020/00AllData/')
dframe <- read_xlsx('Data_1048_Yoga.xlsx')
print(dframe)
dropCol <- c("FID","Shape","kategori")
dropDF <- dframe[ , !(names(dframe) %in% dropCol)]
value <- min(table(dropDF$Class)) # Balancing data
newDF <- dropDF %>% group_by(Class) %>% sample_n(value)
sort_dataframe <- arrange(newDF)
setwd('D:/00RCode/Result') # Path for save result
New_DF_xlsx <- write.xlsx(sort_dataframe, file = "Cidanau_Try03.xlsx")
print(sort_dataframe)
setwd('D:/00RCode/Result')
dframe <- read_xlsx('Cidanau_Try03.xlsx')
print(dframe)
value <- min(table(dropDF$Class)) # Balancing data
value <- min(table(dframe$Class)) # Balancing data
newDF <- dframe %>% group_by(Class) %>% sample_n(value)
print(newDF)
boxplot(newDF$Band_4)
boxplot(newDF)
New_DF_xlsx <- write.xlsx(newDF, file = "Cidanau_Try03_New.xlsx")
plot(newDF$Band_4, newDF$frci)
boxplot(dframe$Band_4)
plot(dframe$Band_4)
plot(dframe$Band_4, dframe$frci)
boxplot(dframe$Band_4)
